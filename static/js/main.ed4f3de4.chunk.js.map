{"version":3,"sources":["Component/contactForm/contactForm.module.css","Component/contactList/ContactList.js","Component/filter/Filter.js","Component/contactForm/ContactForm.js","Component/App.js","index.js","Component/contactList/ContactList.module.css","Component/filter/Filter.module.css"],"names":["module","exports","ContactList","contacts","deletContact","className","s","List","map","contact","data","name","number","btn","type","id","onClick","Filter","value","onChange","form","inputName","input","pattern","title","required","ContactForm","state","onHandleChange","e","target","setState","onHandleSubmit","preventDefault","props","isExistContact","alert","addNewContact","reset","contactForm","onSubmit","this","contactForm__btn","Component","App","filter","newContact","prev","uuidv4","some","toLowerCase","onHandleChangeFilter","getVisibleContacts","normolizedFilter","includes","contactsLS","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","filteredContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed4f3de4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactForm_contactForm__2y9E2\",\"contactForm__btn\":\"contactForm_contactForm__btn__1Rm_i\",\"btn\":\"contactForm_btn__3o3Vn\",\"inputName\":\"contactForm_inputName__IDF24\",\"input\":\"contactForm_input__2QFra\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, deletContact }) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <ol className={s.List}>\r\n          {contacts.map((contact) => (\r\n            <li className={s.data} key={contact.id}>\r\n              <p>\r\n                {contact.name} : {contact.number}\r\n              </p>\r\n              <button\r\n                className={s.btn}\r\n                type=\"button\"\r\n                id={contact.id}\r\n                onClick={deletContact}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.object.isRequired,\r\n  deletContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <>\r\n      <div className={s.form}>\r\n        <label>\r\n          <p className={s.inputName}>Find contacts by name</p>\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={value}\r\n            onChange={onChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./contactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  onHandleChange = (e) => {\r\n    const { value, name } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.props.isExistContact(this.state.name)) {\r\n      alert(`${this.state.name} is already exist`);\r\n    } else {\r\n      this.props.addNewContact(this.state);\r\n    }\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.contactForm} onSubmit={this.onHandleSubmit}>\r\n        <label>\r\n          <p className={s.inputName}>Name:</p>\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.onHandleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <p className={s.inputName}>Number:</p>\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.onHandleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <div className={s.contactForm__btn}>\r\n          <button className={s.btn} type=\"submit\">\r\n            Add Contact\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onHandleChange: PropTypes.func.isRequired,\r\n  onHandleSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contactsLS = localStorage.getItem(\"contacts\");\r\n    const parsedContacts = JSON.parse(contactsLS);\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addNewContact = (newContact) => {\r\n    this.setState((prev) => {\r\n      return { contacts: [...prev.contacts, { id: uuidv4(), ...newContact }] };\r\n    });\r\n  };\r\n\r\n  isExistContact = (name) =>\r\n    this.state.contacts.some(\r\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n\r\n  deletContact = (e) => {\r\n    const id = e.target.id;\r\n    this.setState((prev) => ({\r\n      contacts: [...prev.contacts.filter((contact) => contact.id !== id)],\r\n    }));\r\n  };\r\n\r\n  onHandleChangeFilter = (e) => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normolizedFilter = filter.toLowerCase();\r\n\r\n    return normolizedFilter\r\n      ? contacts.filter((contact) =>\r\n          contact.name.toLowerCase().includes(normolizedFilter)\r\n        )\r\n      : contacts;\r\n  };\r\n\r\n  render() {\r\n    const filteredContacts = this.getVisibleContacts();\r\n    return (\r\n      <>\r\n        <div>\r\n          <h1>Phonebook</h1>\r\n          <ContactForm\r\n            isExistContact={this.isExistContact}\r\n            addNewContact={this.addNewContact}\r\n          />\r\n          <h2>Contacts</h2>\r\n          <Filter\r\n            value={this.state.filter}\r\n            onChange={this.onHandleChangeFilter}\r\n          />\r\n          <ContactList\r\n            contacts={filteredContacts}\r\n            deletContact={this.deletContact}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../src/index.css\";\nimport App from \"./Component/App\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactList_List__MBvTu\",\"data\":\"ContactList_data__3H8jD\",\"btn\":\"ContactList_btn__35457\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__1Ylf4\",\"inputName\":\"Filter_inputName__2QkLV\",\"input\":\"Filter_input__gceHr\"};"],"sourceRoot":""}